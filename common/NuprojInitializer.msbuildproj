<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|AnyCPU">
      <Configuration>Debug</Configuration>
      <Platform>AnyCPU</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|AnyCPU">
      <Configuration>Release</Configuration>
      <Platform>AnyCPU</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <OutputPath>$(SolutionDir)</OutputPath>
    <ProjectGuid>417B0D00-F90E-47BB-9085-BE7E412C9DA8</ProjectGuid>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="CreateManifestResourceNames" />
  <Target Name="CoreCompile" />
  <Target Name="GetReferenceAssemblyPaths" />
  <Target Name="CopyFilesToOutputDirectory" />
  <Target Name="_GenerateCompileDependencyCache" />
  
  <!-- This is where the fun starts. Any custom generic msbuild project goop goes here. -->

  <!-- Inline task to check for timestamp file existence and creation-->
  <Target Name="CreateTimestampFile" AfterTargets="Build">
    <Touch Condition="'$(SolutionDir)' != ''" AlwaysCreate="true" Files="$(SolutionDir)$(SolutionName).timestamp" />
    <Message Condition="'$(SolutionDir)' != ''" Text="NuprojInitializer touched $(SolutionDir)$(SolutionName).timestamp" />
  </Target>

</Project>